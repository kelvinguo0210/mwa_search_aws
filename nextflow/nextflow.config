#!/usr/bin/env nextflow

process {
    withLabel: 'gpu|cpu' {
        executor = 'local'
        cpus = 1
    }
}

// This should always be overwritten
params.obsid = "no_obsid"
params.awsbatch = null

hostname = "$HOSTNAME"

if ( hostname.startsWith("galaxy") ) {
    process {
        withLabel: 'gpu|cpu|cpu_large_mem|download' {
            cpus = 1
        }
        withLabel: gpu {
            queue = 'gpuq'
            executor = 'slurm'
        }
        withLabel: cpu {
            queue = 'workq'
            executor = 'slurm-magnus'
            clusterOptions = '--account=pawsey0348'
        }
        withLabel: cpu_large_mem {
            queue = 'workq'
            executor = 'slurm-magnus'
            clusterOptions = '--account=pawsey0348'
        }
        withLabel: download {
            queue = 'copyq'
            executor = 'slurm-zeus'
            memory = "10 GB"
        }
        cache = 'lenient'
    }

    //executor.queueSize = 90

    process.module = 'singularity/3.7.4'
    singularity {
        enabled = true
        //cacheDir = '/pawsey/mwa/singularity'
        runOptions = '--nv'
        envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    }
    params.containerDir = '/pawsey/mwa/singularity'

    params.module_dir = '/group/mwa/software/modulefiles'
    params.presto_module_dir = '/group/mwa/software/modulefiles'
    params.presto_module = 'v3.0.1'
    params.basedir = '/group/mwavcs/vcs'
    params.scratch_basedir = '/astro/mwavcs/vcs'
    params.search_dir = '/astro/mwavcs/pulsar_search'

    workDir = "/astro/mwavcs/${USER}/${params.obsid}_work"

    //Beamforming benchmarks
    params.bm_read  =  1.103
    params.bm_cal   =  0.209
    params.bm_beam  =  0.256
    params.bm_write =  0.062

    params.max_pointings = 25
    params.max_cpus_per_node = 8
    params.max_gpu_jobs = 120
}

if ( hostname.startsWith("garrawarla") ) {
    process {
        withLabel: 'gpu|cpu|cpu_large_mem' {
            cpus = 1
        }
        withLabel: gpu {
            queue = 'gpuq'
            executor = 'slurm'
            memory = "10 GB"
        }
        withLabel: cpu {
            queue = 'workq'
            executor = 'slurm'
            memory = "10 GB"
        }
        withLabel: cpu_large_mem {
            queue = 'workq'
            executor = 'slurm'
            memory = "8 GB"
        }
        withLabel: cpu_any {
            queue = 'workq'
            executor = 'slurm'
            memory = "10 GB"
        }
        withLabel: download {
            queue = 'copyq'
            executor = 'slurm-zeus'
            memory = "10 GB"
        }
        cache = 'lenient'
    }

    executor.$slurm.queueSize = 1000
    //executor.dumpInterval = '1sec'
    //executor.pollInterval = '1sec'
    executor.submitRateLimit = '100 sec'


    process.module = 'singularity/3.7.4'
    singularity {
        enabled = true
        //cacheDir = '/pawsey/mwa/singularity'
        runOptions = '--nv -B /nvmetmp'
        envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    }
    params.containerDir = '/pawsey/mwa/singularity'

    params.module_dir = '/pawsey/mwa/software/python3/modulefiles'
    params.presto_module_dir = '/pawsey/mwa/software/python3/modulefiles'
    params.presto_module = 'master'
    params.basedir = '/group/mwavcs/vcs'
    params.scratch_basedir = '/astro/mwavcs/vcs'
    params.search_dir = '/astro/mwavcs/pulsar_search'

    workDir = "/astro/mwavcs/${USER}/${params.obsid}_work"

    //Beamforming benchmarks
    //params.bm_read  =  0.172 //this read benchmark is not always sufficent
    //params.bm_read  =  3.000 //overkill
    params.bm_read  =  1.000
    params.bm_cal   =  0.091
    params.bm_beam  =  0.033
    //params.bm_write =  0.039
    params.bm_write =  0.390

    params.max_pointings = 20
    params.max_cpus_per_node = 38 // leaves 2 for the gpuq
    params.max_gpu_jobs = 48
}
else if ( hostname.startsWith("farnarkle") ) {
    process {
        withLabel: 'gpu|cpu|cpu_large_mem' {
            executor = 'slurm'
            cpus = 1
        }
        withLabel: gpu {
            queue = 'skylake-gpu'
            memory = "25 GB"
        }
        withLabel: cpu {
            queue = 'skylake'
            memory = "3 GB"
        }
        withLabel: cpu_large_mem {
            queue = 'skylake'
            memory = "8 GB"
        }
        cache = 'lenient'
    }

    executor.$slurm.queueSize = 1000
    executor.dumpInterval = '10sec'
    executor.pollInterval = '10sec'
    executor.submitRateLimit = '100 sec'

    process.module = 'apptainer/latest'
    singularity {
        enabled = true
        //cacheDir = '/fred/oz125/container_images'
        //autoMounts = true
        runOptions = '-B /fred --nv'
    }
    params.containerDir = '/fred/oz125/container_images'

    params.module_dir = '/fred/oz125/software/modulefiles'
    params.presto_module_dir = '/apps/users/pulsar/skylake/modulefiles'
    params.presto_module = 'd6265c2'
    params.basedir = '/fred/oz125/vcs'
    params.scratch_basedir = '/fred/oz125/vcs'
    params.search_dir = '/fred/oz125/nswainst/pulsar_search'

    workDir = "/fred/oz125/${USER}/${params.obsid}_work"

    //Beamforming benchmarks
    params.bm_read  = 0.366
    params.bm_cal   = 0.115
    params.bm_beam  = 0.041
    params.bm_write = 0.071

    params.max_pointings = 120
    params.max_gpu_jobs = 120
}else if ( hostname.startsWith("x86") ) {
    process {
        withLabel: 'gpu|cpu|cpu_large_mem' {
            executor = 'slurm'
            cpus = 1
        }
        withLabel: gpu {
            queue = 'all-gpu'
            memory = "30 GB"
        }
        withLabel: cpu {
            queue = 'purley-cpu'
            memory = "3 GB"
        }
        withLabel: cpu_large_mem {
            queue = 'purley-cpu'
            memory = "8 GB"
        }
        cache = 'lenient'
    }

    executor.$slurm.queueSize = 1000
    executor.dumpInterval = '10sec'
    executor.pollInterval = '10sec'
    executor.submitRateLimit = '100 sec'

    singularity {
        enabled = true
        //cacheDir = '/o9000/MWA/Pulsar/vcs/singularity_images'
        //autoMounts = true
        //runOptions = '-B /o9000 --nv'
        runOptions = '-B /o9000'
    }
    params.containerDir = '/o9000/MWA/Pulsar/vcs/singularity_images'

    //params.module_dir = '/home/nick/modules'
    params.module_dir = '/home/app/modulefiles/'
    params.presto_module_dir = '/home/app/modulefiles/'
    params.presto_module = 'cpu-master'
    params.basedir = '/o9000/MWA/Pulsar/vcs'
    params.scratch_basedir = '/o9000/MWA/Pulsar/vcs'
    params.search_dir = '/o9000/MWA/Pulsar/vcs/candidates'

    workDir = "/fs/mwa_base/o9000/MWA/Pulsar/vcs/${params.obsid}/${env.USER}_work"

    //Beamforming benchmarks
    //params.bm_read  = 0.266 previous benchmark
    params.bm_read  = 0.366*2
    params.bm_cal   = 0.070*2
    params.bm_beam  = 0.120*2
    params.bm_write = 0.013*2

    params.max_pointings = 120
    params.max_gpu_jobs = 120

}else if ( params.awsbatch ){
    plugins {
      id 'nf-amazon'
    }

    process {
        executor = 'awsbatch'
        queue = 'aws-batch-queue'
        //container = 'quay.io/biocontainers/salmon'
        //containerOptions = '--shm-size 16000000 --ulimit nofile=1280:2560 --ulimit nproc=16:32'
    }

    process {
        withLabel: 'gpu|cpu|cpu_large_mem' {
            executor = 'awsbatch'
            //cpus = 1
        }
        withLabel: gpu {
            queue = 'aws-batch-gpu-queue'
            //memory = "25 GB"
        }
        withLabel: cpu {
            queue = 'aws-batch-purley-cpu'
            //memory = "4 GB"
        }
        withLabel: cpu_large_mem {
            queue = 'aws-batch-purley-cpu'
            //memory = "4 GB"
        }
        cache = 'lenient'
    }

    docker {
      enabled = true
      runOptions= "-v /fs:/fs "
    }

    ////? executor.$local.queueSize = 1000
    params.basedir = '/fs/mwa_base'
    params.scratch_basedir = '/fs'
    params.search_dir = '/fs/mwa_base/${params.obsid}/kguo_candidates_aws'
    workDir = "./kguo_aws_work"

    //Beamforming benchmarks
    //params.bm_read  = 0.266 previous benchmark
    params.bm_read  = 0.366*2
    params.bm_cal   = 0.070*2
    params.bm_beam  = 0.120*2
    params.bm_write = 0.013*2

    params.max_pointings = 120
    params.max_gpu_jobs = 1
}else{
    process {
        withLabel: 'gpu|cpu|cpu_large_mem' {
            executor = 'local'
            cpus = 1
        }
        withLabel: gpu {
            queue = 'all-gpu'
            memory = "25 GB"
        }
        withLabel: cpu {
            queue = 'purley-cpu'
            memory = "4 GB"
        }
        withLabel: cpu_large_mem {
            queue = 'purley-cpu'
            memory = "4 GB"
        }
        cache = 'lenient'
    }

    docker {
      enabled = true
      runOptions= "-v /fs:/fs "
    }

    executor.$local.queueSize = 1000
    //executor.dumpInterval = '10sec'
    //executor.pollInterval = '10sec'
    //executor.submitRateLimit = '100 sec'

    ////singularity {
        ////enabled = true
        //cacheDir = '/o9000/MWA/Pulsar/vcs/singularity_images'
        //autoMounts = true
        //runOptions = '-B /o9000 --nv'
        ////runOptions = '-B /o9000'
    ////}
    ////params.containerDir = '/o9000/MWA/Pulsar/vcs/singularity_images'

    //params.module_dir = '/home/nick/modules'
    params.module_dir = '/home/app/modulefiles/'
    params.presto_module_dir = '/home/app/modulefiles/'
    params.presto_module = 'cpu-master'

    ////params.basedir = '/o9000/MWA/Pulsar/vcs'
    params.basedir = '/fs/mwa_base'
    ////params.scratch_basedir = '/o9000/MWA/Pulsar/vcs'
    params.scratch_basedir = '/fs'
    ////params.search_dir = '/o9000/MWA/Pulsar/vcs/candidates'
    params.search_dir = '/fs/mwa_base/${params.obsid}/kguo_candidates'

    ////workDir = "/o9000/MWA/Pulsar/vcs/${params.obsid}/${env.USER}_work"
    workDir = "/fs/mwa_base/${params.obsid}/kguo_work"

    //Beamforming benchmarks
    //params.bm_read  = 0.266 previous benchmark
    params.bm_read  = 0.366*2
    params.bm_cal   = 0.070*2
    params.bm_beam  = 0.120*2
    params.bm_write = 0.013*2

    params.max_pointings = 120
    params.max_gpu_jobs = 1
}


